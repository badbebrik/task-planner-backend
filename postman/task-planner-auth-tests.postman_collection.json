{
	"info": {
		"_postman_id": "task-planner-auth-tests",
		"name": "Task Planner Auth Tests",
		"description": "Тесты для эндпоинтов авторизации",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Тесты регистрации",
			"item": [
				{
					"name": "Регистрация нового пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Статус код 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Сообщение об отправке email\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.message).to.eql(\"Verification email sent\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"test123\",\n    \"name\": \"Test User\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/register/email",
							"host": ["{{base_url}}"],
							"path": ["register", "email"]
						}
					}
				},
				{
					"name": "Попытка регистрации существующего пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Статус код 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"pm.test(\"Сообщение об ошибке\", function () {",
									"    pm.response.text().to.include(\"User already exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"test123\",\n    \"name\": \"Test User\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/register/email",
							"host": ["{{base_url}}"],
							"path": ["register", "email"]
						}
					}
				}
			]
		},
		{
			"name": "Тесты входа",
			"item": [
				{
					"name": "Успешный вход",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Статус код 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Наличие токенов\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.access_token).to.exist;",
									"    pm.expect(response.refresh_token).to.exist;",
									"});",
									"",
									"// Сохраняем токены в переменные окружения",
									"const response = pm.response.json();",
									"pm.environment.set(\"access_token\", response.access_token);",
									"pm.environment.set(\"refresh_token\", response.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"test123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/login",
							"host": ["{{base_url}}"],
							"path": ["login"]
						}
					}
				},
				{
					"name": "Неверные учетные данные",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Статус код 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Сообщение об ошибке\", function () {",
									"    pm.response.text().to.include(\"invalid credentials\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"wrongpassword\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/login",
							"host": ["{{base_url}}"],
							"path": ["login"]
						}
					}
				}
			]
		},
		{
			"name": "Тесты обновления токенов",
			"item": [
				{
					"name": "Успешное обновление токенов",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Статус код 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Наличие новых токенов\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.access_token).to.exist;",
									"    pm.expect(response.refresh_token).to.exist;",
									"});",
									"",
									"// Обновляем токены в переменных окружения",
									"const response = pm.response.json();",
									"pm.environment.set(\"access_token\", response.access_token);",
									"pm.environment.set(\"refresh_token\", response.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/refresh",
							"host": ["{{base_url}}"],
							"path": ["refresh"]
						}
					}
				}
			]
		},
		{
			"name": "Тесты выхода",
			"item": [
				{
					"name": "Успешный выход",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Статус код 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Сообщение об успешном выходе\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.message).to.eql(\"Successfully logged out\");",
									"});",
									"",
									"// Очищаем токены",
									"pm.environment.set(\"access_token\", \"\");",
									"pm.environment.set(\"refresh_token\", \"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/logout",
							"host": ["{{base_url}}"],
							"path": ["logout"]
						}
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
} 